{{'grid.css' |  asset_url | stylesheet_tag}}

<p>Tisso vison in the wild</p>

<div class="grid">
    {% for product in section.settings.product_list %}
      <div class="product" data-image = "{{ product.featured_image|img_url:"600x600" }}" data-title="{{ product.title }}" data-price="{{ product.price | money }}" data-description= "{{ product.description }}" 
        data-options= "{{ product.options_with_values | json | escape}}" >
        <img src="{{ product.featured_image| img_url: '480x480' }}" alt="{{ product.title }}" width="600px" height="600px">
        

      </div>
    {% endfor %}
</div>

<div id="modal" class="modal">
    <span id="modalCloseButton" class="modal_close_button">
      &#10006;
    </span>
  <div class="modal_content">
    <div class="modal_img_container">
      <img id="modalImage" class="modal_img" src="{{ product.featured_image| img_url: '480x480' }}" alt="{{ product.title }}" width="100px" height="100px">
    </div>
    <div class="modal_text">
      <h2 id="modalTitle" class="modal_title"> product title </h2>
      <p id="modalPrice" class="modal_price"> Product Price </p>
      <p id="modalDescription" class="modal_description"> Product description </p>
    </div> 
  </div>
  
  <div id="modalColors" class="modal_color_selection">
  </div>
  
  <div id="modalSizes" class="modal_size_selection">
    
  </div>

  <div class="add_to_cart">
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded',()=>{
    
    const modal = document.getElementById('modal');
    const modalCloseButton=document.getElementById('modalCloseButton');
    document.querySelectorAll('.product').forEach((product) =>{
      product.addEventListener('click',(e) =>{
        const productData= e.currentTarget.dataset
        document.getElementById('modalImage').src=productData.image;
        document.getElementById('modalTitle').innerText=productData.title;
        document.getElementById('modalPrice').innerText=productData.price;
        document.getElementById('modalDescription').innerText=productData.description;
        console.log(productData.options);
        const options=JSON.parse(productData.options);
        const sizesOption=options[0].values;
        const colorOption=options[1].values;

        if(colorOption){
          colorOption.values.forEach((color) =>{
            const colorContainer = document.createElement('div');
            colorContainer.classlist.add('color_container');
  
            const colorChoice=document.createElement('div');
            const colorShowcase=document.createElement('span');
            const colorName=document.createElement('span');
            colorChoice.classlist.add('color_choice');
            colorShowcase.classlist.add('color_showcase');
            colorName.classlist.add('color_name');
            colorShowcase.style.backgroundColor=color;
            colorName.innertext=color;
            colorContainer.appendChild(colorChoice);
            colorChoice.appendChild(colorShowcase);  
            colorChoice.appendChild(colorName);

            colorContainer.addEventListener('click', (){
              doucment.querySelectorAll('.color_container').forEach(choice => {
                choice.classlist.remove('selected');
              });
              colorContainer.classlist.add('selected');
            });
        });
          
        }

        modal.style.display='block';
      });
    });
    modalCloseButton.addEventListener('click', ()=>{
      modal.style.display='none';
    })
    
  })
  
</script>

{% schema %}
  {
    "name": "grid",
    "settings": [
      {
        "type": "product_list",
        "id": "product_list",
        "label": "Select the Products to be featured",
        "limit": 6
        
      }
    ]
  }
{% endschema %}